name: Deploy Authentication Services to EC2

on:
  push:
    branches:
      - test  # El branch que activará el despliegue

jobs:
  deploy:
    runs-on: ubuntu-latest  # Usamos Ubuntu como runner

    steps:
    - name: Set up SSH key for EC2
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_KEY }}  # Agregar la clave SSH en secrets

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Build Docker images for login and register services
      run: |
        docker build -t kamartinez/login-service ./Login
        docker build -t kamartinez/register-service ./Register
        docker build -t kamartinez/login-root ./Login-Root

    - name: Push images to Docker Hub
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker push kamartinez/login-service
        docker push kamartinez/register-service
        docker push kamartinez/login-root

    - name: Deploy services to EC2
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: 52.1.37.215  # IP de tu instancia EC2
        username: ec2-user
        key: ${{ secrets.EC2_SSH_KEY }}  # Agregar la clave SSH en secrets
        script: |
          # Detener y eliminar cualquier contenedor previo
          docker stop login-service || true
          docker rm login-service || true
          docker stop register-service || true
          docker rm register-service || true
          docker stop login-root || true
          docker rm login-root || true

          # Descargar las imágenes más recientes desde Docker Hub
          docker pull kamartinez/login-service
          docker pull kamartinez/register-service
          docker pull kamartinez/login-root

          # Ejecutar los contenedores con las imágenes actualizadas
          docker run -d --name login-service -p 8001:8001 --restart unless-stopped kamartinez/login-service
          docker run -d --name register-service -p 8002:8002 --restart unless-stopped kamartinez/register-service
          docker run -d --name login-root -p 8003:8003 --restart unless-stopped kamartinez/login-root

          # Probar el servicio /login para asegurarse de que está funcionando
          response=$(curl --write-out "%{http_code}" --silent --output /dev/null http://52.1.37.215:8001/login)

          # Si la respuesta es 200 (OK), mantenemos el contenedor. Si no, lo eliminamos
          if [ "$response" -eq 200 ]; then
            echo "Login service is working, keeping the container running."
          else
            echo "Login service failed, stopping and removing the container."
            docker stop login-service || true
            docker rm login-service || true
            exit 1  # Esto terminará el job con error, indicando que la prueba falló
          fi
